/*******************************************************************************

    Copyright (C) 2014  René 'Shirk' Köcher
 
    This file is part of Hotarubi.

    Hotarubi is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
 
    Hotarubi is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

*******************************************************************************/

/* methods dealing directly with the CPU or per-CPU local data 
 *
 * THIS FILE IS RECREATED FROM <%= @source %> as needed - DON'T MODIFY
 */

#ifndef __PROCESSOR_LOCAL_DATA_H
#define __PROCESSOR_LOCAL_DATA_H 1

#include <hotarubi/types.h>

<% for @header in @includes %>
<%= "#include <#{@header}>\n" %>
<% end %>

namespace processor
{
    #pragma pack( push, 1 )
	struct local_data
	{
		/* _gs_self is used to get a pointer to this struct by accessing %gs:0 */
		uintptr_t _gs_self;

<% for @member in @defines %>
		<%= "#{@member};" %>
<% end %>
	};
    #pragma pack( pop )

	static_assert( offsetof( struct local_data, _gs_self ) == 0,
	               "_gs_self must be located at offset 0 in struct local_data.");
};

#endif
