diff -Nrdup gcc-4.9.1.orig/libgcc/crtstuff.c gcc-4.9.1/libgcc/crtstuff.c
--- gcc-4.9.1.orig/libgcc/crtstuff.c	2014-03-10 19:31:20.000000000 +0100
+++ gcc-4.9.1/libgcc/crtstuff.c	2014-08-07 18:39:55.000000000 +0200
@@ -63,6 +63,19 @@ see the files COPYING3 and COPYING.RUNTI
 #include "libgcc_tm.h"
 #include "unwind-dw2-fde.h"
 
+/* Disable features not required for crtstuff in kernel environments */
+#define USE_TM_CLONE_REGISTRY 0  /* no transactional memor support */
+#ifdef USE_EH_FRAME_REGISTRY
+# undef USE_EH_FRAME_REGISTRY    /* no exception frame registry */
+#endif
+#ifdef EH_FRAME_SECTION_NAME
+# undef EH_FRAME_SECTION_NAME    /* no extra section for unwind info */
+#endif
+
+#ifdef JCR_SECTION_NAME
+# undef JCR_SECTION_NAME         /* no java class registry */
+#endif
+
 #ifndef FORCE_CODE_SECTION_ALIGN
 # define FORCE_CODE_SECTION_ALIGN
 #endif
@@ -165,6 +176,7 @@ call_ ## FUNC (void)					\
 
 /* References to __register_frame_info and __deregister_frame_info should
    be weak in this file if at all possible.  */
+#if USE_EH_FRAME_REGISTRY
 extern void __register_frame_info (const void *, struct object *)
 				  TARGET_ATTRIBUTE_WEAK;
 extern void __register_frame_info_bases (const void *, struct object *,
@@ -174,14 +186,19 @@ extern void *__deregister_frame_info (co
 				     TARGET_ATTRIBUTE_WEAK;
 extern void *__deregister_frame_info_bases (const void *)
 				     TARGET_ATTRIBUTE_WEAK;
+#endif
 extern void __do_global_ctors_1 (void);
 
 /* Likewise for _Jv_RegisterClasses.  */
+#ifdef JCR_SECTION_NAME
 extern void _Jv_RegisterClasses (void *) TARGET_ATTRIBUTE_WEAK;
+#endif
 
 /* Likewise for transactional memory clone tables.  */
+#if USE_TM_CLONE_REGISTRY
 extern void _ITM_registerTMCloneTable (void *, size_t) TARGET_ATTRIBUTE_WEAK;
 extern void _ITM_deregisterTMCloneTable (void *) TARGET_ATTRIBUTE_WEAK;
+#endif
 
 #ifdef OBJECT_FORMAT_ELF
 
